{
  "contractName": "ShortWeatherInsurance",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumPremium",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "operators",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPosition",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "payOut",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "notional",
          "type": "uint256"
        }
      ],
      "name": "getPremium",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "valuationTime",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "forecast",
      "outputs": [
        {
          "name": "",
          "type": "int32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "location",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operatorAddress",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "notional",
          "type": "uint256"
        }
      ],
      "name": "buyInsurance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operatorAddress",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "setMinimumPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "condition",
      "outputs": [
        {
          "name": "",
          "type": "int32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "currentTime",
          "type": "uint32"
        },
        {
          "name": "currentForecast",
          "type": "int32"
        },
        {
          "name": "currentRisk",
          "type": "uint32"
        }
      ],
      "name": "updateForecast",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expirationTime",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "forecastRisk",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractLocation",
          "type": "string"
        },
        {
          "name": "contractExpirationTime",
          "type": "uint32"
        },
        {
          "name": "contractCondition",
          "type": "int32"
        },
        {
          "name": "contractPremium",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "notional",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "InsuranceBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "notional",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InsurancePaid",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "notional",
          "type": "uint256"
        }
      ],
      "name": "getIntrinsicValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001dd838038062001dd8833981018060405260808110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b5050929190602001805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360029080519060200190620001469291906200019d565b5082600360006101000a81548163ffffffff021916908363ffffffff16021790555081600360046101000a81548163ffffffff021916908360030b63ffffffff16021790555080600581905550505050506200024c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001e057805160ff191683800117855562000211565b8280016001018555821562000211579182015b8281111562000210578251825591602001919060010190620001f3565b5b50905062000220919062000224565b5090565b6200024991905b80821115620002455760008160009055506001016200022b565b5090565b90565b611b7c806200025c6000396000f3fe60806040526004361061011c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ce8e3e1461011e578063087d8d011461018a57806313e7c9d8146101b557806316c197391461021e5780631922ff391461028a5780631bf1fffb146102db5780633270bb5b1461032a578063330c6fff14610359578063362bc88814610390578063516f279e146103c157806383197ef0146104515780638da5cb5b146104685780639870d7fe146104bf578063a86a658c14610510578063ac8a584a1461053e578063b2600f7d1461058f578063b2855c9d146105de578063c503133114610619578063cb65d5231461064a578063da284dcc146106a8578063f318c3e9146106df575b005b34801561012a57600080fd5b50610133610716565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561017657808201518184015260208101905061015b565b505050509050019250505060405180910390f35b34801561019657600080fd5b5061019f6108bc565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b50610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c2565b604051808215151515815260200191505060405180910390f35b34801561022a57600080fd5b5061026d6004803603602081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e2565b604051808381526020018281526020019250505060405180910390f35b34801561029657600080fd5b506102d9600480360360208110156102ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610974565b005b3480156102e757600080fd5b50610314600480360360208110156102fe57600080fd5b8101908080359060200190929190505050610c45565b6040518082815260200191505060405180910390f35b34801561033657600080fd5b5061033f610c83565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b5061036e610e54565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561039c57600080fd5b506103a5610e6a565b604051808260030b60030b815260200191505060405180910390f35b3480156103cd57600080fd5b506103d6610e7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104165780820151818401526020810190506103fb565b50505050905090810190601f1680156104435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045d57600080fd5b50610466610f1b565b005b34801561047457600080fd5b5061047d61113d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104cb57600080fd5b5061050e600480360360208110156104e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611162565b005b61053c6004803603602081101561052657600080fd5b8101908080359060200190929190505050611280565b005b34801561054a57600080fd5b5061058d6004803603602081101561056157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061169e565b005b34801561059b57600080fd5b506105c8600480360360208110156105b257600080fd5b81019080803590602001909291905050506117bd565b6040518082815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b8101908080359060200190929190505050611822565b005b34801561062557600080fd5b5061062e61198e565b604051808260030b60030b815260200191505060405180910390f35b34801561065657600080fd5b506106a66004803603606081101561066d57600080fd5b81019080803563ffffffff169060200190929190803560030b9060200190929190803563ffffffff1690602001909291905050506119a1565b005b3480156106b457600080fd5b506106bd611b24565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156106eb57600080fd5b506106f4611b3a565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bc5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60068054806020026020016040519081016040528092919081815260200182805480156108b257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610868575b5050505050905090565b60055481565b60016020528060005260406000206000915054906101000a900460ff1681565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015491509150915091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff1610151515610ae0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610b32826117bd565b90506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000811115610c40578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bcb573d6000803e3d6000fd5b507fb5eaaeb2aa51cc997f52158c4449ce7c9cabac7c17996c87d9ac71a63a7a411f838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15b505050565b60006005546064600360109054906101000a900463ffffffff1663ffffffff168402811515610c7057fe5b04610c7a846117bd565b01019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d295750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b600680549050811015610e4b57600060046000600684815481101515610dc557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610e3e576000915050610e51565b8080600101915050610da3565b50600190505b90565b600360089054906101000a900463ffffffff1681565b6003600c9054906101000a900460030b81565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f135780601f10610ee857610100808354040283529160200191610f13565b820191906000526020600020905b815481529060010190602001808311610ef657829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fdf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff1610151515611087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b61108f610c83565b1515611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416c6c20706f736974696f6e73206d75737420626520636c6f7365642e00000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360089054906101000a900463ffffffff1663ffffffff16111515611310576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b600360089054906101000a900463ffffffff1663ffffffff16600360009054906101000a900463ffffffff1663ffffffff16101515156113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436f6e747261637420657870697265642e00000000000000000000000000000081525060200191505060405180910390fd5b600081111515611456576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f4e6f74696f6e616c206d7573742062652067726561746572207468616e207a6581526020017f726f2e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61145f81610c45565b34101515156114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e73756666696369656e74207072656d69756d2e000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414156115885760063390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055507f85621fda2424a2fb62ff5a760a65f83be910a6d94354598d92782ef6708bf4ff338234604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006003600c9054906101000a900460030b60030b600360049054906101000a900460030b60030b131561181857816003600c9054906101000a900460030b600360049054906101000a900460030b0360030b02905061181d565b600090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600081111515611984576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5072656d69756d206d7573742062652067726561746572207468616e207a657281526020017f6f2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060058190555050565b600360049054906101000a900460030b81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a455750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b82600360086101000a81548163ffffffff021916908363ffffffff160217905550816003600c6101000a81548163ffffffff021916908360030b63ffffffff16021790555080600360106101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360009054906101000a900463ffffffff1681565b600360109054906101000a900463ffffffff168156fea165627a7a723058209474af600e9de4a87e68041b688eec1d3959c5d45e0bed52cc124c318d01f6310029",
  "deployedBytecode": "0x60806040526004361061011c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ce8e3e1461011e578063087d8d011461018a57806313e7c9d8146101b557806316c197391461021e5780631922ff391461028a5780631bf1fffb146102db5780633270bb5b1461032a578063330c6fff14610359578063362bc88814610390578063516f279e146103c157806383197ef0146104515780638da5cb5b146104685780639870d7fe146104bf578063a86a658c14610510578063ac8a584a1461053e578063b2600f7d1461058f578063b2855c9d146105de578063c503133114610619578063cb65d5231461064a578063da284dcc146106a8578063f318c3e9146106df575b005b34801561012a57600080fd5b50610133610716565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561017657808201518184015260208101905061015b565b505050509050019250505060405180910390f35b34801561019657600080fd5b5061019f6108bc565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b50610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c2565b604051808215151515815260200191505060405180910390f35b34801561022a57600080fd5b5061026d6004803603602081101561024157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e2565b604051808381526020018281526020019250505060405180910390f35b34801561029657600080fd5b506102d9600480360360208110156102ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610974565b005b3480156102e757600080fd5b50610314600480360360208110156102fe57600080fd5b8101908080359060200190929190505050610c45565b6040518082815260200191505060405180910390f35b34801561033657600080fd5b5061033f610c83565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b5061036e610e54565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561039c57600080fd5b506103a5610e6a565b604051808260030b60030b815260200191505060405180910390f35b3480156103cd57600080fd5b506103d6610e7d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104165780820151818401526020810190506103fb565b50505050905090810190601f1680156104435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045d57600080fd5b50610466610f1b565b005b34801561047457600080fd5b5061047d61113d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104cb57600080fd5b5061050e600480360360208110156104e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611162565b005b61053c6004803603602081101561052657600080fd5b8101908080359060200190929190505050611280565b005b34801561054a57600080fd5b5061058d6004803603602081101561056157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061169e565b005b34801561059b57600080fd5b506105c8600480360360208110156105b257600080fd5b81019080803590602001909291905050506117bd565b6040518082815260200191505060405180910390f35b3480156105ea57600080fd5b506106176004803603602081101561060157600080fd5b8101908080359060200190929190505050611822565b005b34801561062557600080fd5b5061062e61198e565b604051808260030b60030b815260200191505060405180910390f35b34801561065657600080fd5b506106a66004803603606081101561066d57600080fd5b81019080803563ffffffff169060200190929190803560030b9060200190929190803563ffffffff1690602001909291905050506119a1565b005b3480156106b457600080fd5b506106bd611b24565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156106eb57600080fd5b506106f4611b3a565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bc5750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60068054806020026020016040519081016040528092919081815260200182805480156108b257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610868575b5050505050905090565b60055481565b60016020528060005260406000206000915054906101000a900460ff1681565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015491509150915091565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff1610151515610ae0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000610b32826117bd565b90506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000811115610c40578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610bcb573d6000803e3d6000fd5b507fb5eaaeb2aa51cc997f52158c4449ce7c9cabac7c17996c87d9ac71a63a7a411f838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15b505050565b60006005546064600360109054906101000a900463ffffffff1663ffffffff168402811515610c7057fe5b04610c7a846117bd565b01019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d295750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b600680549050811015610e4b57600060046000600684815481101515610dc557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610e3e576000915050610e51565b8080600101915050610da3565b50600190505b90565b600360089054906101000a900463ffffffff1681565b6003600c9054906101000a900460030b81565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f135780601f10610ee857610100808354040283529160200191610f13565b820191906000526020600020905b815481529060010190602001808311610ef657829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fdf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff1610151515611087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b61108f610c83565b1515611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416c6c20706f736974696f6e73206d75737420626520636c6f7365642e00000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600360089054906101000a900463ffffffff1663ffffffff16111515611310576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b600360089054906101000a900463ffffffff1663ffffffff16600360009054906101000a900463ffffffff1663ffffffff16101515156113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436f6e747261637420657870697265642e00000000000000000000000000000081525060200191505060405180910390fd5b600081111515611456576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f4e6f74696f6e616c206d7573742062652067726561746572207468616e207a6581526020017f726f2e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61145f81610c45565b34101515156114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e73756666696369656e74207072656d69756d2e000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414156115885760063390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555034600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825401925050819055507f85621fda2424a2fb62ff5a760a65f83be910a6d94354598d92782ef6708bf4ff338234604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60006003600c9054906101000a900460030b60030b600360049054906101000a900460030b60030b131561181857816003600c9054906101000a900460030b600360049054906101000a900460030b0360030b02905061181d565b600090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156118e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600081111515611984576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5072656d69756d206d7573742062652067726561746572207468616e207a657281526020017f6f2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060058190555050565b600360049054906101000a900460030b81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a455750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b82600360086101000a81548163ffffffff021916908363ffffffff160217905550816003600c6101000a81548163ffffffff021916908360030b63ffffffff16021790555080600360106101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360009054906101000a900463ffffffff1681565b600360109054906101000a900463ffffffff168156fea165627a7a723058209474af600e9de4a87e68041b688eec1d3959c5d45e0bed52cc124c318d01f6310029",
  "sourceMap": "195:619:2:-;;;294:321;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:321:2;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;294:321:2;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;294:321:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;982:10:3;974:5;;:18;;;;;;;;;;;;;;;;;;439:10:2;431:5;;:18;;;;;;;;;;;;;;;;;;468:16;457:8;:27;;;;;;;;;;;;:::i;:::-;;509:22;492:14;;:39;;;;;;;;;;;;;;;;;;551:17;539:9;;:29;;;;;;;;;;;;;;;;;;;;593:15;576:14;:32;;;;294:321;;;;195:619;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "195:619:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1788:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1788:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1788:108:3;;;;;;;;;;;;;;;;;772:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:26:3;;;;;;;;;;;;;;;;;;;;;;;236:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:41:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;236:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3298:143:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3298:143:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2305:453;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2305:453:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2305:453:3;;;;;;;;;;;;;;;;;;;;;;3522:160;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3522:160:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3522:160:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:219;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2764:219:3;;;;;;;;;;;;;;;;;;;;;;;;;;;464:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;519:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;283:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;283:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3030:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3030:207:3;;;;;;202:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;202:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1546:113:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1546:113:3;;;;;;;;;;;;;;;;;;;;;;3688:596;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3688:596:3;;;;;;;;;;;;;;;;;;;;1665:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1665:117:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1665:117:3;;;;;;;;;;;;;;;;;;;;;;621:191:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;621:191:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;621:191:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:165:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1902:165:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1902:165:3;;;;;;;;;;;;;;;;;;;;367:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:226;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2073:226:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2073:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;311:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;599:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1788:108;1851:16;1222:5;;;;;;;;;;;1208:19;;:10;:19;;;:44;;;;1231:9;:21;1241:10;1231:21;;;;;;;;;;;;;;;;;;;;;;;;;1208:44;1200:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:5;1877:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1788:108;:::o;772:26::-;;;;:::o;236:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;3298:143::-;3356:4;3362;3384:9;:15;3394:4;3384:15;;;;;;;;;;;;;;;:24;;;3410:9;:15;3420:4;3410:15;;;;;;;;;;;;;;;:23;;;3376:58;;;;3298:143;;;:::o;2305:453::-;1114:5;;;;;;;;;;;1100:19;;:10;:19;;;1092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:14;;;;;;;;;;;2378:31;;:13;;;;;;;;;;;:31;;;;2370:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:13;2460:9;:15;2470:4;2460:15;;;;;;;;;;;;;;;:24;;;2444:40;;2492:16;2511:27;2529:8;2511:17;:27::i;:::-;2492:46;;2597:1;2570:9;:15;2580:4;2570:15;;;;;;;;;;;;;;;:24;;:28;;;;2647:1;2633:11;:15;2629:123;;;2660:4;:13;;:26;2674:11;2660:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2660:26:3;2701:42;2715:4;2721:8;2731:11;2701:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2629:123;1147:1;;2305:453;:::o;3522:160::-;3578:4;3661:14;;3655:3;3640:12;;;;;;;;;;;3629:23;;:8;:23;:29;;;;;;;;3599:27;3617:8;3599:17;:27::i;:::-;:59;:76;3592:83;;3522:160;;;:::o;2764:219::-;2825:4;1222:5;;;;;;;;;;;1208:19;;:10;:19;;;:44;;;;1231:9;:21;1241:10;1231:21;;;;;;;;;;;;;;;;;;;;;;;;;1208:44;1200:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2844:6;2853:1;2844:10;;2839:119;2860:5;:12;;;;2856:1;:16;2839:119;;;2924:1;2893:9;:19;2903:5;2909:1;2903:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:19;;;;;;;;;;;;;;;:28;;;:32;2889:60;;;2944:5;2937:12;;;;;2889:60;2874:3;;;;;;;2839:119;;;;2972:4;2965:11;;1280:1;2764:219;:::o;464:27::-;;;;;;;;;;;;;:::o;519:21::-;;;;;;;;;;;;;:::o;283:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3030:207::-;1114:5;;;;;;;;;;;1100:19;;:10;:19;;;1092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:14;;;;;;;;;;;3084:31;;:13;;;;;;;;;;;:31;;;;3076:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:11;:9;:11::i;:::-;3150:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:5;;;;;;;;;;;3211:19;;;202:28;;;;;;;;;;;;;:::o;1546:113::-;1114:5;;;;;;;;;;;1100:19;;:10;:19;;;1092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:4;1619:9;:26;1629:15;1619:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1546:113;:::o;3688:596::-;3774:1;3758:13;;;;;;;;;;;:17;;;3750:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3834:13;;;;;;;;;;;3816:31;;:14;;;;;;;;;;;:31;;;;3808:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3896:1;3885:8;:12;3877:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3966:20;3977:8;3966:10;:20::i;:::-;3953:9;:33;;3945:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4082:1;4048:9;:21;4058:10;4048:21;;;;;;;;;;;;;;;:30;;;:35;4044:71;;;4093:5;4104:10;4093:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4093:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:71;4158:8;4124:9;:21;4134:10;4124:21;;;;;;;;;;;;;;;:30;;;:42;;;;;;;;;;;4207:9;4174;:21;4184:10;4174:21;;;;;;;;;;;;;;;:29;;;:42;;;;;;;;;;;4229:48;4245:10;4257:8;4267:9;4229:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:596;:::o;1665:117::-;1114:5;;;;;;;;;;;1100:19;;:10;:19;;;1092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:5;1741:9;:26;1751:15;1741:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1665:117;:::o;621:191:2:-;684:4;714:8;;;;;;;;;;;702:20;;:9;;;;;;;;;;;:20;;;698:107;;;768:8;756;;;;;;;;;;;744:9;;;;;;;;;;;:20;739:26;;:37;732:44;;;;698:107;804:1;797:8;;621:191;;;;:::o;1902:165:3:-;1114:5;;;;;;;;;;;1100:19;;:10;:19;;;1092:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:1;1978:7;:11;1970:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:7;2036:14;:24;;;;1902:165;:::o;367:22::-;;;;;;;;;;;;;:::o;2073:226::-;1222:5;;;;;;;;;;;1208:19;;:10;:19;;;:44;;;;1231:9;:21;1241:10;1231:21;;;;;;;;;;;;;;;;;;;;;;;;;1208:44;1200:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:11;2197:13;;:27;;;;;;;;;;;;;;;;;;2243:15;2232:8;;:26;;;;;;;;;;;;;;;;;;;;2281:11;2266:12;;:26;;;;;;;;;;;;;;;;;;2073:226;;;:::o;311:28::-;;;;;;;;;;;;;:::o;599:26::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./WeatherInsurance.sol\";\n\n/**\n* @title ColdWeatherInsurance\n* Pays out if weather condition measure at expiration is below contract condition \"strike\" measure\n*/\ncontract ShortWeatherInsurance is WeatherInsurance {\n   \n    /**\n    * @dev Constructor\n    */\n    constructor(string memory contractLocation, uint32 contractExpirationTime, int32 contractCondition, uint contractPremium) public {\n      owner = msg.sender;\n      location = contractLocation;\n      expirationTime = contractExpirationTime;\n      condition = contractCondition;\n      minimumPremium = contractPremium;\n    }\n\n    function getIntrinsicValue(uint notional) public view returns (uint) {\n      if (condition > forecast)\n        return uint(condition - forecast) * notional;\n      else\n        return 0;\n    }\n}",
  "sourcePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ShortWeatherInsurance.sol",
  "ast": {
    "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ShortWeatherInsurance.sol",
    "exportedSymbols": {
      "ShortWeatherInsurance": [
        178
      ]
    },
    "id": 179,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/WeatherInsurance.sol",
        "file": "./WeatherInsurance.sol",
        "id": 120,
        "nodeType": "ImportDirective",
        "scope": 179,
        "sourceUnit": 587,
        "src": "25:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 121,
              "name": "WeatherInsurance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 586,
              "src": "229:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WeatherInsurance_$586",
                "typeString": "contract WeatherInsurance"
              }
            },
            "id": 122,
            "nodeType": "InheritanceSpecifier",
            "src": "229:16:2"
          }
        ],
        "contractDependencies": [
          586
        ],
        "contractKind": "contract",
        "documentation": "@title ColdWeatherInsurance\nPays out if weather condition measure at expiration is below contract condition \"strike\" measure",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178,
          586
        ],
        "name": "ShortWeatherInsurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "423:192:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 133,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "431:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "439:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "439:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "431:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "431:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 138,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "457:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 139,
                      "name": "contractLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "468:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "457:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "457:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "expirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "492:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "contractExpirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "509:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "492:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "492:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "condition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "539:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "contractCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "551:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "539:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "539:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "minimumPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "576:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "contractPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "593:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "576:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "576:32:2"
                }
              ]
            },
            "documentation": "@dev Constructor",
            "id": 155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "contractLocation",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "306:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "name": "contractExpirationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "338:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "name": "contractCondition",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "369:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "name": "contractPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "394:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:110:2"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:2"
            },
            "scope": 178,
            "src": "294:321:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "690:122:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "condition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "702:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "forecast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "714:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "702:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "804:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 161,
                    "id": 174,
                    "nodeType": "Return",
                    "src": "797:8:2"
                  },
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "698:107:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "condition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "744:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 167,
                              "name": "forecast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "756:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "744:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          ],
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "739:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "notional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "768:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "739:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 161,
                    "id": 172,
                    "nodeType": "Return",
                    "src": "732:44:2"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIntrinsicValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "notional",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "648:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:15:2"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "684:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:6:2"
            },
            "scope": 178,
            "src": "621:191:2",
            "stateMutability": "view",
            "superFunction": 484,
            "visibility": "public"
          }
        ],
        "scope": 179,
        "src": "195:619:2"
      }
    ],
    "src": "0:814:2"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ShortWeatherInsurance.sol",
    "exportedSymbols": {
      "ShortWeatherInsurance": [
        178
      ]
    },
    "id": 179,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/WeatherInsurance.sol",
        "file": "./WeatherInsurance.sol",
        "id": 120,
        "nodeType": "ImportDirective",
        "scope": 179,
        "sourceUnit": 587,
        "src": "25:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 121,
              "name": "WeatherInsurance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 586,
              "src": "229:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WeatherInsurance_$586",
                "typeString": "contract WeatherInsurance"
              }
            },
            "id": 122,
            "nodeType": "InheritanceSpecifier",
            "src": "229:16:2"
          }
        ],
        "contractDependencies": [
          586
        ],
        "contractKind": "contract",
        "documentation": "@title ColdWeatherInsurance\nPays out if weather condition measure at expiration is below contract condition \"strike\" measure",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178,
          586
        ],
        "name": "ShortWeatherInsurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "423:192:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 133,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "431:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "439:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "439:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "431:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "431:18:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 138,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "457:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 139,
                      "name": "contractLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "468:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "457:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "457:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "expirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "492:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "contractExpirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "509:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "492:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "492:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "condition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "539:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "contractCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "551:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "539:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "539:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "minimumPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "576:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "contractPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "593:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "576:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "576:32:2"
                }
              ]
            },
            "documentation": "@dev Constructor",
            "id": 155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "contractLocation",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "306:30:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "name": "contractExpirationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "338:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "name": "contractCondition",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "369:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "name": "contractPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "394:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:110:2"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:2"
            },
            "scope": 178,
            "src": "294:321:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "690:122:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "condition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "702:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "forecast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "714:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "702:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "804:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 161,
                    "id": 174,
                    "nodeType": "Return",
                    "src": "797:8:2"
                  },
                  "id": 175,
                  "nodeType": "IfStatement",
                  "src": "698:107:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            },
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "condition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "744:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 167,
                              "name": "forecast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "756:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "744:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          ],
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "739:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "notional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "768:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "739:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 161,
                    "id": 172,
                    "nodeType": "Return",
                    "src": "732:44:2"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIntrinsicValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "name": "notional",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "648:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:15:2"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "684:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:6:2"
            },
            "scope": 178,
            "src": "621:191:2",
            "stateMutability": "view",
            "superFunction": 484,
            "visibility": "public"
          }
        ],
        "scope": 179,
        "src": "195:619:2"
      }
    ],
    "src": "0:814:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-04-23T18:42:09.911Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "Constructor"
      }
    },
    "title": "ColdWeatherInsurance Pays out if weather condition measure at expiration is below contract condition \"strike\" measure"
  },
  "userdoc": {
    "methods": {
      "addOperator(address)": {
        "notice": "************ Restricted**************"
      },
      "getPosition(address)": {
        "notice": "************ Public**************"
      }
    }
  }
}