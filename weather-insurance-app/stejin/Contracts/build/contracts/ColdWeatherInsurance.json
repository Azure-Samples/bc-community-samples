{
  "contractName": "ColdWeatherInsurance",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getUsers",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumPremium",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "payOut",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "valuationTime",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "forecast",
      "outputs": [
        {
          "name": "",
          "type": "int32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "location",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "notional",
          "type": "uint64"
        }
      ],
      "name": "getPremium",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "notional",
          "type": "uint64"
        }
      ],
      "name": "buyInsurance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "temperature",
      "outputs": [
        {
          "name": "",
          "type": "int32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "setMinimumPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "currentTime",
          "type": "uint32"
        },
        {
          "name": "currentForecast",
          "type": "int32"
        },
        {
          "name": "currentRisk",
          "type": "uint32"
        }
      ],
      "name": "updateForecast",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expirationTime",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "forecastRisk",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractOperator",
          "type": "address"
        },
        {
          "name": "contractLocation",
          "type": "string"
        },
        {
          "name": "contractExpirationTime",
          "type": "uint32"
        },
        {
          "name": "contractTemperature",
          "type": "int32"
        },
        {
          "name": "contractPremium",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "notional",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "premium",
          "type": "uint256"
        }
      ],
      "name": "InsuranceBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "notional",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InsurancePaid",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "notional",
          "type": "uint64"
        }
      ],
      "name": "getIntrinsicValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b9438038062001b94833981018060405260a08110156200003757600080fd5b810190808051906020019092919080516401000000008111156200005a57600080fd5b828101905060208101848111156200007157600080fd5b81518560018202830111640100000000821117156200008f57600080fd5b5050929190602001805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836002908051906020019062000191929190620001e9565b5082600360006101000a81548163ffffffff021916908363ffffffff16021790555081600360046101000a81548163ffffffff021916908360030b63ffffffff16021790555080600581905550505050505062000298565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022c57805160ff19168380011785556200025d565b828001600101855582156200025d579182015b828111156200025c5782518255916020019190600101906200023f565b5b5090506200026c919062000270565b5090565b6200029591905b808211156200029157600081600090555060010162000277565b5090565b90565b6118ec80620002a86000396000f3fe608060405260043610610111576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ce8e3e14610116578063087d8d01146101825780631922ff39146101ad5780633270bb5b146101fe578063330c6fff1461022d578063362bc88814610264578063516f279e1461029557806355f5751014610325578063570ca7351461039e57806363a6b582146103f5578063782b34221461044e57806383197ef0146104a75780638b59a756146104be5780638da5cb5b146104f6578063adccea121461054d578063b2855c9d1461057e578063b60d4288146105b9578063cb65d523146105c3578063da284dcc14610621578063f318c3e914610658575b600080fd5b34801561012257600080fd5b5061012b61068f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561016e578082015181840152602081019050610153565b505050509050019250505060405180910390f35b34801561018e57600080fd5b50610197610839565b6040518082815260200191505060405180910390f35b3480156101b957600080fd5b506101fc600480360360208110156101d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061083f565b005b34801561020a57600080fd5b50610213610b54565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b50610242610d44565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561027057600080fd5b50610279610d5a565b604051808260030b60030b815260200191505060405180910390f35b3480156102a157600080fd5b506102aa610d6d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ea5780820151818401526020810190506102cf565b50505050905090810190601f1680156103175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033157600080fd5b506103746004803603602081101561034857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e0b565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b3480156103aa57600080fd5b506103b3610e32565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561040157600080fd5b506104386004803603602081101561041857600080fd5b81019080803567ffffffffffffffff169060200190929190505050610e58565b6040518082815260200191505060405180910390f35b34801561045a57600080fd5b506104916004803603602081101561047157600080fd5b81019080803567ffffffffffffffff169060200190929190505050610ea0565b6040518082815260200191505060405180910390f35b3480156104b357600080fd5b506104bc610f0f565b005b6104f4600480360360208110156104d457600080fd5b81019080803567ffffffffffffffff169060200190929190505050611131565b005b34801561050257600080fd5b5061050b611567565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055957600080fd5b5061056261158c565b604051808260030b60030b815260200191505060405180910390f35b34801561058a57600080fd5b506105b7600480360360208110156105a157600080fd5b810190808035906020019092919050505061159f565b005b6105c161170b565b005b3480156105cf57600080fd5b5061061f600480360360608110156105e657600080fd5b81019080803563ffffffff169060200190929190803560030b9060200190929190803563ffffffff16906020019092919050505061170d565b005b34801561062d57600080fd5b50610636611894565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561066457600080fd5b5061066d6118aa565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107395750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156107ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600680548060200260200160405190810160405280929190818152602001828054801561082f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107e5575b5050505050905090565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610903576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff16101515156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1690506000610a0e82610ea0565b90506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000811115610b4f578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ac6573d6000803e3d6000fd5b507fd2a216ab6ccfa115fec0edd2720e7d261ec3d5c4a424a81c1039255ec5bcdb21838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001828152602001935050505060405180910390a15b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bfe5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610c72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b600680549050811015610d3b57600060046000600684815481101515610c9a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161115610d2e576000915050610d41565b8080600101915050610c78565b50600190505b90565b600360089054906101000a900463ffffffff1681565b6003600c9054906101000a900460030b81565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e035780601f10610dd857610100808354040283529160200191610e03565b820191906000526020600020905b815481529060010190602001808311610de657829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005546064600360109054906101000a900463ffffffff1663ffffffff168467ffffffffffffffff1602811515610e8d57fe5b04610e9784610ea0565b01019050919050565b60006003600c9054906101000a900460030b60030b600360049054906101000a900460030b60030b1315610f05578167ffffffffffffffff166003600c9054906101000a900460030b600360049054906101000a900460030b0360030b029050610f0a565b600090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff161015151561107b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b611083610b54565b15156110f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416c6c20706f736974696f6e73206d75737420626520636c6f7365642e00000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600360089054906101000a900463ffffffff1663ffffffff161115156111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b600360089054906101000a900463ffffffff1663ffffffff16600360009054906101000a900463ffffffff1663ffffffff1610151515611269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436f6e747261637420657870697265642e00000000000000000000000000000081525060200191505060405180910390fd5b60008167ffffffffffffffff16111515611311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f4e6f74696f6e616c206d7573742062652067726561746572207468616e207a6581526020017f726f2e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61131a81610e58565b3410151515611391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e73756666696369656e74207072656d69756d2e000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141561145e5760063390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc1e6956ff2598e39050978d1d34d423e1705cba51fbd4f70c070b7760a280180338234604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001828152602001935050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900460030b81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600081111515611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5072656d69756d206d7573742062652067726561746572207468616e207a657281526020017f6f2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060058190555050565b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806117b55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b82600360086101000a81548163ffffffff021916908363ffffffff160217905550816003600c6101000a81548163ffffffff021916908360030b63ffffffff16021790555080600360106101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360009054906101000a900463ffffffff1681565b600360109054906101000a900463ffffffff168156fea165627a7a72305820eea9a494758cc5a92ffd29dc1d8f0c5e11a78b323af3940bcbf1a59b7ec4bb8a0029",
  "deployedBytecode": "0x608060405260043610610111576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ce8e3e14610116578063087d8d01146101825780631922ff39146101ad5780633270bb5b146101fe578063330c6fff1461022d578063362bc88814610264578063516f279e1461029557806355f5751014610325578063570ca7351461039e57806363a6b582146103f5578063782b34221461044e57806383197ef0146104a75780638b59a756146104be5780638da5cb5b146104f6578063adccea121461054d578063b2855c9d1461057e578063b60d4288146105b9578063cb65d523146105c3578063da284dcc14610621578063f318c3e914610658575b600080fd5b34801561012257600080fd5b5061012b61068f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561016e578082015181840152602081019050610153565b505050509050019250505060405180910390f35b34801561018e57600080fd5b50610197610839565b6040518082815260200191505060405180910390f35b3480156101b957600080fd5b506101fc600480360360208110156101d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061083f565b005b34801561020a57600080fd5b50610213610b54565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b50610242610d44565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561027057600080fd5b50610279610d5a565b604051808260030b60030b815260200191505060405180910390f35b3480156102a157600080fd5b506102aa610d6d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ea5780820151818401526020810190506102cf565b50505050905090810190601f1680156103175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033157600080fd5b506103746004803603602081101561034857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e0b565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b3480156103aa57600080fd5b506103b3610e32565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561040157600080fd5b506104386004803603602081101561041857600080fd5b81019080803567ffffffffffffffff169060200190929190505050610e58565b6040518082815260200191505060405180910390f35b34801561045a57600080fd5b506104916004803603602081101561047157600080fd5b81019080803567ffffffffffffffff169060200190929190505050610ea0565b6040518082815260200191505060405180910390f35b3480156104b357600080fd5b506104bc610f0f565b005b6104f4600480360360208110156104d457600080fd5b81019080803567ffffffffffffffff169060200190929190505050611131565b005b34801561050257600080fd5b5061050b611567565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055957600080fd5b5061056261158c565b604051808260030b60030b815260200191505060405180910390f35b34801561058a57600080fd5b506105b7600480360360208110156105a157600080fd5b810190808035906020019092919050505061159f565b005b6105c161170b565b005b3480156105cf57600080fd5b5061061f600480360360608110156105e657600080fd5b81019080803563ffffffff169060200190929190803560030b9060200190929190803563ffffffff16906020019092919050505061170d565b005b34801561062d57600080fd5b50610636611894565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561066457600080fd5b5061066d6118aa565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107395750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156107ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600680548060200260200160405190810160405280929190818152602001828054801561082f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107e5575b5050505050905090565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610903576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff16101515156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1690506000610a0e82610ea0565b90506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000811115610b4f578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ac6573d6000803e3d6000fd5b507fd2a216ab6ccfa115fec0edd2720e7d261ec3d5c4a424a81c1039255ec5bcdb21838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001828152602001935050505060405180910390a15b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bfe5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610c72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b600680549050811015610d3b57600060046000600684815481101515610c9a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff161115610d2e576000915050610d41565b8080600101915050610c78565b50600190505b90565b600360089054906101000a900463ffffffff1681565b6003600c9054906101000a900460030b81565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e035780601f10610dd857610100808354040283529160200191610e03565b820191906000526020600020905b815481529060010190602001808311610de657829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005546064600360109054906101000a900463ffffffff1663ffffffff168467ffffffffffffffff1602811515610e8d57fe5b04610e9784610ea0565b01019050919050565b60006003600c9054906101000a900460030b60030b600360049054906101000a900460030b60030b1315610f05578167ffffffffffffffff166003600c9054906101000a900460030b600360049054906101000a900460030b0360030b029050610f0a565b600090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900463ffffffff1663ffffffff16600360089054906101000a900463ffffffff1663ffffffff161015151561107b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374207374696c6c206163746976652e0000000000000000000081525060200191505060405180910390fd5b611083610b54565b15156110f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416c6c20706f736974696f6e73206d75737420626520636c6f7365642e00000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600360089054906101000a900463ffffffff1663ffffffff161115156111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436f6e7472616374206e6f74206163746976652e00000000000000000000000081525060200191505060405180910390fd5b600360089054906101000a900463ffffffff1663ffffffff16600360009054906101000a900463ffffffff1663ffffffff1610151515611269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436f6e747261637420657870697265642e00000000000000000000000000000081525060200191505060405180910390fd5b60008167ffffffffffffffff16111515611311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f4e6f74696f6e616c206d7573742062652067726561746572207468616e207a6581526020017f726f2e000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61131a81610e58565b3410151515611391576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e73756666696369656e74207072656d69756d2e000000000000000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16141561145e5760063390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc1e6956ff2598e39050978d1d34d423e1705cba51fbd4f70c070b7760a280180338234604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018367ffffffffffffffff1667ffffffffffffffff168152602001828152602001935050505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360049054906101000a900460030b81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b600081111515611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f5072656d69756d206d7573742062652067726561746572207468616e207a657281526020017f6f2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8060058190555050565b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806117b55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420617574686f72697a65642e000000000000000000000000000000000081525060200191505060405180910390fd5b82600360086101000a81548163ffffffff021916908363ffffffff160217905550816003600c6101000a81548163ffffffff021916908360030b63ffffffff16021790555080600360106101000a81548163ffffffff021916908363ffffffff160217905550505050565b600360009054906101000a900463ffffffff1681565b600360109054906101000a900463ffffffff168156fea165627a7a72305820eea9a494758cc5a92ffd29dc1d8f0c5e11a78b323af3940bcbf1a59b7ec4bb8a0029",
  "sourceMap": "166:700:0:-;;;264:391;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:391:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;264:391:0;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;264:391:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;839:10:3;831:5;;:18;;;;;;;;;;;;;;;;;;440:10:0;432:5;;:18;;;;;;;;;;;;;;;;;;469:16;458:8;;:27;;;;;;;;;;;;;;;;;;504:16;493:8;:27;;;;;;;;;;;;:::i;:::-;;545:22;528:14;;:39;;;;;;;;;;;;;;;;;;589:19;575:11;;:33;;;;;;;;;;;;;;;;;;;;633:15;616:14;:32;;;;264:391;;;;;166:700;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "166:700:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:108:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1414:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1414:108:3;;;;;;;;;;;;;;;;;696:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;696:29:3;;;;;;;;;;;;;;;;;;;;;;;1934:440;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1934:440:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1934:440:3;;;;;;;;;;;;;;;;;;;;;;2380:210;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2380:210:3;;;;;;;;;;;;;;;;;;;;;;;;;;;408:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;463:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;463:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;265:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;265:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;265:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;647:43:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;647:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2985:174;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2985:174:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2985:174:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:203:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:207:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:207:3;;;;;;3165:530;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3165:530:3;;;;;;;;;;;;;;;;;;;;;;202:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;202:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;349:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1528:168:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1528:168:3;;;;;;;;;;;;;;;;;;;;3750:40;;;;;;1702:226;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1702:226:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1702:226:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;293:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;537:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;537:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:108;1477:16;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;:45;;;;1102:8;;;;;;;;;;;1088:22;;:10;:22;;;1065:45;1057:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:5;1503:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:108;:::o;696:29::-;;;;:::o;1934:440::-;971:5;;;;;;;;;;;957:19;;:10;:19;;;949:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2024:14;;;;;;;;;;;2007:31;;:13;;;;;;;;;;;:31;;;;1999:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2073:15;2091:9;:15;2101:4;2091:15;;;;;;;;;;;;;;;;;;;;;;;;;2073:33;;2114:19;2136:27;2154:8;2136:17;:27::i;:::-;2114:49;;2213:1;2195:9;:15;2205:4;2195:15;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;2263:1;2249:11;:15;2245:123;;;2276:4;:13;;:26;2290:11;2276:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2276:26:3;2317:42;2331:4;2337:8;2347:11;2317:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:123;1004:1;;1934:440;:::o;2380:210::-;2441:4;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;:45;;;;1102:8;;;;;;;;;;;1088:22;;:10;:22;;;1065:45;1057:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:6;2469:1;2460:10;;2455:110;2476:5;:12;;;;2472:1;:16;2455:110;;;2531:1;2509:9;:19;2519:5;2525:1;2519:8;;;;;;;;;;;;;;;;;;;;;;;;;;;2509:19;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;2505:51;;;2551:5;2544:12;;;;;2505:51;2490:3;;;;;;;2455:110;;;;2579:4;2572:11;;1138:1;2380:210;:::o;408:27::-;;;;;;;;;;;;;:::o;463:21::-;;;;;;;;;;;;;:::o;265:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;647:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;236:23::-;;;;;;;;;;;;;:::o;2985:174::-;3043:7;3138:14;;3132:3;3116:12;;;;;;;;;;;3108:21;;3097:8;:32;;;:38;;;;;;;;3067:27;3085:8;3067:17;:27::i;:::-;:68;:85;3060:92;;2985:174;;;:::o;661:203:0:-;726:7;761:8;;;;;;;;;;;747:22;;:11;;;;;;;;;;;:22;;;743:114;;;820:8;786:42;;808:8;;;;;;;;;;;794:11;;;;;;;;;;;:22;786:31;;:42;779:49;;;;743:114;856:1;849:8;;661:203;;;;:::o;2637:207:3:-;971:5;;;;;;;;;;;957:19;;:10;:19;;;949:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:14;;;;;;;;;;;2691:31;;:13;;;;;;;;;;;:31;;;;2683:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:11;:9;:11::i;:::-;2757:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2831:5;;;;;;;;;;;2818:19;;;3165:530;3253:1;3237:13;;;;;;;;;;;:17;;;3229:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:13;;;;;;;;;;;3295:31;;:14;;;;;;;;;;;:31;;;;3287:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3375:1;3364:8;:12;;;3356:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3445:20;3456:8;3445:10;:20::i;:::-;3432:9;:33;;3424:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3552:1;3527:9;:21;3537:10;3527:21;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;3523:62;;;3563:5;3574:10;3563:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3563:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3523:62;3619:8;3594:9;:21;3604:10;3594:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3640:48;3656:10;3668:8;3678:9;3640:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3165:530;:::o;202:28::-;;;;;;;;;;;;;:::o;349:24::-;;;;;;;;;;;;;:::o;1528:168::-;971:5;;;;;;;;;;;957:19;;:10;:19;;;949:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:1;1607:7;:11;1599:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:7;1665:14;:24;;;;1528:168;:::o;3750:40::-;:::o;1702:226::-;1079:5;;;;;;;;;;;1065:19;;:10;:19;;;:45;;;;1102:8;;;;;;;;;;;1088:22;;:10;:22;;;1065:45;1057:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:11;1826:13;;:27;;;;;;;;;;;;;;;;;;1872:15;1861:8;;:26;;;;;;;;;;;;;;;;;;;;1910:11;1895:12;;:26;;;;;;;;;;;;;;;;;;1702:226;;;:::o;293:28::-;;;;;;;;;;;;;:::o;537:26::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./WeatherInsurance.sol\";\n\n/**\n* @title ColdWeatherInsurance\n* Pays out if temperature at expiration is below contract temperature\n*/\ncontract ColdWeatherInsurance is WeatherInsurance {\n   \n    /**\n    * @dev Constructor\n    */\n    constructor(address contractOperator, string memory contractLocation, uint32 contractExpirationTime, int32 contractTemperature, uint256 contractPremium) public {\n      owner = msg.sender;\n      operator = contractOperator;\n      location = contractLocation;\n      expirationTime = contractExpirationTime;\n      temperature = contractTemperature;\n      minimumPremium = contractPremium;\n    }\n\n    function getIntrinsicValue(uint64 notional) public view returns (uint256) {\n      if (temperature > forecast)\n        return uint256(temperature - forecast) * notional;\n      else\n        return 0;\n    }\n}",
  "sourcePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ColdWeatherInsurance.sol",
  "ast": {
    "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ColdWeatherInsurance.sol",
    "exportedSymbols": {
      "ColdWeatherInsurance": [
        66
      ]
    },
    "id": 67,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/WeatherInsurance.sol",
        "file": "./WeatherInsurance.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 532,
        "src": "25:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "WeatherInsurance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 531,
              "src": "199:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WeatherInsurance_$531",
                "typeString": "contract WeatherInsurance"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "199:16:0"
          }
        ],
        "contractDependencies": [
          531
        ],
        "contractKind": "contract",
        "documentation": "@title ColdWeatherInsurance\nPays out if temperature at expiration is below contract temperature",
        "fullyImplemented": true,
        "id": 66,
        "linearizedBaseContracts": [
          66,
          531
        ],
        "name": "ColdWeatherInsurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "424:231:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "432:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "440:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "440:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "432:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "432:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "458:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "contractOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "469:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "458:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "458:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "493:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "contractLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "504:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "493:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "493:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "expirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "528:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "contractExpirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "545:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "528:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "528:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "575:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "contractTemperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "589:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "575:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "575:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "minimumPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "616:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "contractPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "633:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "616:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "616:32:0"
                }
              ]
            },
            "documentation": "@dev Constructor",
            "id": 43,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "contractOperator",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "276:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "contractLocation",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "302:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "contractExpirationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "334:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "contractTemperature",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "365:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "contractPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "392:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:141:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:0"
            },
            "scope": 66,
            "src": "264:391:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "735:129:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "747:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "forecast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "761:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "747:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "856:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 49,
                    "id": 62,
                    "nodeType": "Return",
                    "src": "849:8:0"
                  },
                  "id": 63,
                  "nodeType": "IfStatement",
                  "src": "743:114:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "temperature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "794:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "forecast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "808:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "794:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          ],
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "786:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "786:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "notional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "820:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "786:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 49,
                    "id": 60,
                    "nodeType": "Return",
                    "src": "779:49:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIntrinsicValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "notional",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "688:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:17:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "726:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:9:0"
            },
            "scope": 66,
            "src": "661:203:0",
            "stateMutability": "view",
            "superFunction": 438,
            "visibility": "public"
          }
        ],
        "scope": 67,
        "src": "166:700:0"
      }
    ],
    "src": "0:866:0"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/ColdWeatherInsurance.sol",
    "exportedSymbols": {
      "ColdWeatherInsurance": [
        66
      ]
    },
    "id": 67,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Volumes/LACIE/Repos/bc-community-samples/weather-insurance-app/stejin/Contracts/contracts/WeatherInsurance.sol",
        "file": "./WeatherInsurance.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 532,
        "src": "25:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "WeatherInsurance",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 531,
              "src": "199:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WeatherInsurance_$531",
                "typeString": "contract WeatherInsurance"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "199:16:0"
          }
        ],
        "contractDependencies": [
          531
        ],
        "contractKind": "contract",
        "documentation": "@title ColdWeatherInsurance\nPays out if temperature at expiration is below contract temperature",
        "fullyImplemented": true,
        "id": 66,
        "linearizedBaseContracts": [
          66,
          531
        ],
        "name": "ColdWeatherInsurance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "424:231:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "432:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 546,
                        "src": "440:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "440:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "432:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "432:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "458:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "contractOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "469:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "458:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "458:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 26,
                      "name": "location",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "493:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "contractLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "504:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "493:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "493:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "expirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "528:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "contractExpirationTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "545:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "528:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "528:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "575:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "contractTemperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "589:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "575:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "575:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38,
                      "name": "minimumPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "616:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "contractPremium",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "633:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "616:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "616:32:0"
                }
              ]
            },
            "documentation": "@dev Constructor",
            "id": 43,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "contractOperator",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "276:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "name": "contractLocation",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "302:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "name": "contractExpirationTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "334:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "contractTemperature",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "365:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "contractPremium",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "392:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:141:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:0"
            },
            "scope": 66,
            "src": "264:391:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "735:129:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "747:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "forecast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "761:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "747:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "856:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 49,
                    "id": 62,
                    "nodeType": "Return",
                    "src": "849:8:0"
                  },
                  "id": 63,
                  "nodeType": "IfStatement",
                  "src": "743:114:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "temperature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "794:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "forecast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "808:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "794:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int32",
                              "typeString": "int32"
                            }
                          ],
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "786:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "786:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "notional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "820:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "786:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 49,
                    "id": 60,
                    "nodeType": "Return",
                    "src": "779:49:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIntrinsicValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "notional",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "688:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:17:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "726:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:9:0"
            },
            "scope": 66,
            "src": "661:203:0",
            "stateMutability": "view",
            "superFunction": 438,
            "visibility": "public"
          }
        ],
        "scope": 67,
        "src": "166:700:0"
      }
    ],
    "src": "0:866:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-04-17T17:46:08.338Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "Constructor"
      }
    },
    "title": "ColdWeatherInsurance Pays out if temperature at expiration is below contract temperature"
  },
  "userdoc": {
    "methods": {
      "getUsers()": {
        "notice": "************ Restricted**************"
      }
    }
  }
}